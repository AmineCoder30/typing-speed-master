const commonWords = [
  "the",
  "be",
  "to",
  "of",
  "and",
  "a",
  "in",
  "that",
  "have",
  "i",
  "it",
  "for",
  "not",
  "on",
  "with",
  "he",
  "as",
  "you",
  "do",
  "at",
  "this",
  "but",
  "his",
  "by",
  "from",
  "they",
  "we",
  "say",
  "her",
  "she",
  "or",
  "an",
  "will",
  "my",
  "one",
  "all",
  "would",
  "there",
  "their",
  "what",
  "so",
  "up",
  "out",
  "if",
  "about",
  "who",
  "get",
  "which",
  "go",
  "me",
  "when",
  "make",
  "can",
  "like",
  "time",
  "no",
  "just",
  "him",
  "know",
  "take",
  "people",
  "into",
  "year",
  "your",
  "good",
  "some",
  "could",
  "them",
  "see",
  "other",
  "than",
  "then",
  "now",
  "look",
  "only",
  "come",
  "its",
  "over",
  "think",
  "also",
  "back",
  "after",
  "use",
  "two",
  "how",
  "our",
  "work",
  "first",
  "well",
  "way",
  "even",
  "new",
  "want",
  "because",
  "any",
  "these",
  "give",
  "day",
  "most",
  "us",
  "is",
  "water",
  "long",
  "find",
  "here",
  "thing",
  "great",
  "man",
  "world",
  "life",
  "still",
  "public",
  "human",
  "read",
  "left",
  "increase",
  "local",
  "sure",
  "something",
  "without",
  "come",
  "me",
  "back",
  "better",
  "general",
  "process",
  "she",
  "heat",
  "thanks",
  "specific",
  "enough",
  "long",
  "lot",
  "hand",
  "popular",
  "small",
  "though",
  "experience",
  "job",
  "book",
  "end",
  "point",
  "type",
  "home",
  "economy",
  "away",
  "big",
  "internet",
  "possible",
  "television",
  "three",
  "understand",
  "various",
  "yourself",
  "card",
  "difficult",
  "including",
  "list",
  "mind",
  "particular",
  "real",
  "science",
  "trade",
  "consider",
  "either",
  "library",
  "likely",
  "nature",
  "fact",
  "line",
  "product",
  "care",
  "group",
  "idea",
  "risk",
  "several",
  "someone",
  "temperature",
  "united",
  "word",
  "fat",
  "force",
  "key",
  "light",
  "simply",
  "today",
  "training",
  "until",
  "major",
  "name",
  "personal",
  "school",
  "top",
  "current",
  "generally",
  "historical",
  "investment",
  "left",
  "national",
  "amount",
  "level",
  "order",
  "practice",
  "research",
  "sense",
  "service",
  "area",
  "cut",
  "hot",
  "instead",
  "least",
  "natural",
  "physical",
  "piece",
  "show",
  "society",
  "try",
  "check",
  "choose",
  "develop",
  "second",
  "useful",
  "web",
  "activity",
  "boss",
  "short",
  "story",
  "call",
  "industry",
  "last",
  "media",
  "mental",
  "move",
  "pay",
  "sport",
  "thing",
  "actually",
  "against",
  "far",
  "fun",
  "house",
  "let",
  "page",
  "remember",
  "term",
  "test",
  "within",
  "along",
  "answer",
  "increase",
  "oven",
  "quite",
  "scared",
  "single",
  "sound",
  "again",
  "community",
  "definition",
  "focus",
  "individual",
  "matter",
  "safety",
  "turn",
  "everything",
  "kind",
  "quality",
  "soil",
  "ask",
  "board",
  "buy",
  "guard",
  "hold",
  "language",
  "later",
  "return",
  "run",
  "study",
  "teach",
  "oil",
  "situation",
  "easy",
  "cost",
  "decision",
  "purple",
  "responsible",
  "save",
  "staff",
  "stop",
  "teach",
  "character",
  "face",
  "lot",
  "my",
  "option",
  "role",
  "through",
  "important",
  "understand",
  "while",
  "writing",
  "necessary",
  "pattern",
  "prove",
  "rather",
  "teacher",
  "college",
  "cut",
  "especially",
  "hard",
  "leave",
  "might",
  "student",
  "across",
  "alone",
  "beyond",
  "during",
]

// Arabic common words
const arabicWords = [
  "في",
  "من",
  "إلى",
  "على",
  "هذا",
  "هذه",
  "التي",
  "الذي",
  "كان",
  "كانت",
  "يكون",
  "تكون",
  "هو",
  "هي",
  "أن",
  "أو",
  "لا",
  "نعم",
  "كل",
  "بعض",
  "جميع",
  "كيف",
  "ماذا",
  "متى",
  "أين",
  "لماذا",
  "مع",
  "بدون",
  "قبل",
  "بعد",
  "أثناء",
  "خلال",
  "عند",
  "لدى",
  "حول",
  "عن",
  "ضد",
  "تحت",
  "فوق",
  "بين",
  "أمام",
  "خلف",
  "يمين",
  "يسار",
  "شمال",
  "جنوب",
  "شرق",
  "غرب",
  "داخل",
  "خارج",
  "قريب",
  "بعيد",
  "كبير",
  "صغير",
  "طويل",
  "قصير",
  "عالي",
  "منخفض",
  "سريع",
  "بطيء",
  "قوي",
  "ضعيف",
  "جديد",
  "قديم",
  "حديث",
  "قادم",
  "ماضي",
  "حاضر",
  "مستقبل",
  "يوم",
  "ليلة",
  "صباح",
  "مساء",
  "ظهر",
  "أسبوع",
  "شهر",
  "سنة",
  "ساعة",
  "دقيقة",
  "ثانية",
  "وقت",
  "زمن",
  "مكان",
  "بيت",
  "منزل",
  "مدرسة",
  "جامعة",
  "مكتب",
  "شركة",
  "مستشفى",
  "مطعم",
  "فندق",
  "متجر",
  "سوق",
  "شارع",
  "طريق",
  "مدينة",
  "قرية",
  "دولة",
  "عالم",
  "أرض",
  "سماء",
  "بحر",
  "نهر",
  "جبل",
  "صحراء",
  "غابة",
  "حديقة",
  "شجرة",
  "زهرة",
  "حيوان",
  "طائر",
  "سمك",
  "إنسان",
  "رجل",
  "امرأة",
  "طفل",
  "ولد",
  "بنت",
  "أب",
  "أم",
  "أخ",
  "أخت",
  "عائلة",
  "صديق",
  "حبيب",
  "زوج",
  "زوجة",
  "ابن",
  "ابنة",
  "جد",
  "جدة",
  "عم",
  "عمة",
  "خال",
  "خالة",
  "طعام",
  "شراب",
  "ماء",
  "خبز",
  "أرز",
  "لحم",
  "دجاج",
  "سمك",
  "خضار",
  "فاكهة",
  "حليب",
  "جبن",
  "سكر",
  "ملح",
  "شاي",
  "قهوة",
  "عصير",
  "كتاب",
  "قلم",
  "ورقة",
  "مكتب",
  "كرسي",
  "طاولة",
  "حاسوب",
  "هاتف",
  "تلفزيون",
  "راديو",
  "سيارة",
  "حافلة",
  "قطار",
  "طائرة",
  "دراجة",
  "مشي",
  "جري",
  "سباحة",
  "لعب",
  "قراءة",
  "كتابة",
  "رسم",
  "غناء",
  "رقص",
  "طبخ",
  "أكل",
  "شرب",
  "نوم",
  "استيقاظ",
  "عمل",
  "دراسة",
  "تعلم",
  "تعليم",
  "فهم",
  "معرفة",
  "تفكير",
  "ذكر",
  "نسيان",
  "حب",
  "كره",
  "فرح",
  "حزن",
  "خوف",
  "شجاعة",
  "أمل",
  "يأس",
  "صحة",
  "مرض",
  "دواء",
  "طبيب",
  "ممرضة",
  "علاج",
  "شفاء",
  "ألم",
  "راحة",
  "تعب",
  "نشاط",
  "لون",
  "أحمر",
  "أزرق",
  "أخضر",
  "أصفر",
  "أسود",
  "أبيض",
  "بني",
  "رمادي",
  "وردي",
  "بنفسجي",
  "برتقالي",
]

// Arabic quotes
const arabicQuotes = [
  "العلم نور والجهل ظلام",
  "من جد وجد ومن زرع حصد",
  "الصبر مفتاح الفرج",
  "العقل السليم في الجسم السليم",
  "خير الناس أنفعهم للناس",
  "اطلبوا العلم من المهد إلى اللحد",
  "الوقت كالسيف إن لم تقطعه قطعك",
  "من صبر ظفر",
  "العلم في الصغر كالنقش على الحجر",
  "الصديق وقت الضيق",
  "درهم وقاية خير من قنطار علاج",
  "الحكمة ضالة المؤمن",
  "اليد العليا خير من اليد السفلى",
  "من تواضع لله رفعه",
  "الكتاب يقرأ من عنوانه",
  "العبرة بالخواتيم",
  "الحاجة أم الاختراع",
  "الممارسة تؤدي إلى الإتقان",
  "الصحة تاج على رؤوس الأصحاء",
  "التعليم في الصغر كالنقش في الحجر",
]

const quotes = [
  "The only way to do great work is to love what you do. - Steve Jobs",
  "Life is what happens to you while you're busy making other plans. - John Lennon",
  "The future belongs to those who believe in the beauty of their dreams. - Eleanor Roosevelt",
  "It is during our darkest moments that we must focus to see the light. - Aristotle",
  "The way to get started is to quit talking and begin doing. - Walt Disney",
  "Your time is limited, so don't waste it living someone else's life. - Steve Jobs",
  "If life were predictable it would cease to be life, and be without flavor. - Eleanor Roosevelt",
  "If you look at what you have in life, you'll always have more. - Oprah Winfrey",
  "If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success. - James Cameron",
  "Life is really simple, but we insist on making it complicated. - Confucius",
]

const codeSnippets = [
  `function fibonacci(n) {
  if (n <= 1) return n;
  return fibonacci(n - 1) + fibonacci(n - 2);
}`,
  `const quickSort = (arr) => {
  if (arr.length <= 1) return arr;
  const pivot = arr[arr.length - 1];
  const left = arr.filter(x => x < pivot);
  const right = arr.filter(x => x > pivot);
  return [...quickSort(left), pivot, ...quickSort(right)];
};`,
  `class BinaryTree {
  constructor(value) {
    this.value = value;
    this.left = null;
    this.right = null;
  }
  
  insert(value) {
    if (value < this.value) {
      if (!this.left) this.left = new BinaryTree(value);
      else this.left.insert(value);
    } else {
      if (!this.right) this.right = new BinaryTree(value);
      else this.right.insert(value);
    }
  }
}`,
  `const debounce = (func, delay) => {
  let timeoutId;
  return (...args) => {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => func.apply(this, args), delay);
  };
};`,
  `async function fetchData(url) {
  try {
    const response = await fetch(url);
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Fetch error:', error);
    throw error;
  }
}`,
]

export function generateWords(count: number): string {
  const words = []
  for (let i = 0; i < count; i++) {
    words.push(commonWords[Math.floor(Math.random() * commonWords.length)])
  }
  return words.join(" ")
}

export function generateArabicWords(count: number): string {
  const words = []
  for (let i = 0; i < count; i++) {
    words.push(arabicWords[Math.floor(Math.random() * arabicWords.length)])
  }
  return words.join(" ")
}

export async function generateQuote(): Promise<string> {
  return quotes[Math.floor(Math.random() * quotes.length)]
}

export async function generateArabicQuote(): Promise<string> {
  return arabicQuotes[Math.floor(Math.random() * arabicQuotes.length)]
}

export function generateCode(): string {
  return codeSnippets[Math.floor(Math.random() * codeSnippets.length)]
}
